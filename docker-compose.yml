version: "3.8"

networks:
  app-network:
    driver: bridge
volumes:
  db_data: {}

services:
  gateway:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: production
    ports:
      - "127.0.0.1:8080:8080"
    entrypoint: "/gateway"
    environment:
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - PIPELINE_SERVICE_URL=${PIPELINE_SERVICE_URL}
    networks:
      - app-network
  auth:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: production
    entrypoint: "/auth"
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_NET=${MYSQL_NET}
      - MYSQL_ADDR=${MYSQL_ADDR}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    networks:
      - app-network
  pipeline:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: production
    entrypoint: "/pipeline"
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_NET=${MYSQL_NET}
      - MYSQL_ADDR=${MYSQL_ADDR}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_REGION=http://localstack:4566
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    networks:
      - app-network
  web:
    build:
      context: .
      dockerfile: web/Dockerfile
      target: production
    ports:
      - "127.0.0.1:8000:80"
    networks:
      - app-network
  db:
    image: mariadb:10.8
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "33060:3306"
    networks:
      - app-network
  localstack:
    image: localstack/localstack
    ports:
      - "127.0.0.1:4510-4559:4510-4559" 
      - "127.0.0.1:4566:4566"
    environment:
      - DEBUG=${DEBUG-}
      - DATA_DIR=${DATA_DIR-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network
